Test file for 1-my_list module
class that inherits from a list
validates entrys

Importing module:
    >>> MyList = __import__('1-my_list').MyList

Assignning class to variable
    >>> my_list = MyList()

----------OUTPUT TESTS------------

Test 1 [1]:
    >>> my_list.append(1)
    >>> print(my_list)
    [1]

Test 2 Clear:
    >>> my_list.clear()
    >>> print(my_list)
    []

Test 3 [-1]:
    >>> my_list.append(-1)
    >>> print(my_list)
    [-1]

Test 4 Clear:
    >>> my_list.clear()
    >>> print(my_list)
    []

Test 5 [5, 5, 5]:
    >>> my_list.append(5)
    >>> my_list.append(5)
    >>> my_list.append(5)
    >>> print(my_list)
    [5, 5, 5]
    >>> print("=====")
    =====
    >>> my_list.print_sorted()
    [5, 5, 5]

Test 6 Clear:
    >>> my_list.clear()
    >>> print(my_list)
    []

Test 7 [5, 2, 7]:
    >>> my_list.append(5)
    >>> my_list.append(2)
    >>> my_list.append(7)
    >>> print(my_list)
    [5, 2, 7]
    >>> print("===========")
    ===========
    >>> my_list.print_sorted()
    [2, 5, 7]

Test 8 Clear:
    >>> my_list.clear()
    >>> print(my_list)
    []

Test 9 [-5, -2, -7]:
    >>> my_list.append(-5)
    >>> my_list.append(-2)
    >>> my_list.append(-7)
    >>> print(my_list)
    [-5, -2, -7]
    >>> print("==========")
    ==========
    >>> my_list.print_sorted()
    [-7, -5, -2]

Test 10 Clear:
    >>> my_list.clear()
    >>> print(my_list)
    []

Test 11 [-5, 2, 9]:
    >>> my_list.append(-5)
    >>> my_list.append(2)
    >>> my_list.append(9)
    >>> print(my_list)
    [-5, 2, 9]
    >>> print("=====")
    =====
    >>> my_list.print_sorted()
    [-5, 2, 9]

Test 12 Clear:
    >>> my_list.clear()
    >>> print(my_list)
    []

Test 13 [-1, -4, 6, 1, 9, 15, 3]:
    >>> my_list.append(-1)
    >>> my_list.append(-4)
    >>> my_list.append(6)
    >>> my_list.append(1)
    >>> my_list.append(9)
    >>> my_list.append(15)
    >>> my_list.append(3)
    >>> print(my_list)
    [-1, -4, 6, 1, 9, 15, 3]
    >>> print("=====")
    =====
    >>> my_list.print_sorted()
    [-4, -1, 1, 3, 6, 9, 15]

Test 14 Clear:
    >>> my_list.clear()
    >>> print(my_list)
    []

------------ERROR CHECKS-----------------

Test 15 Empty:
    >>> my_list.append(-1)
    >>> my_list.append()
    Traceback (most recent call last):
    ...
    TypeError: append() takes exactly one argument (0 given)

Test 16 CLEAR:
    >>> my_list.clear()
    >>> print(my_list)
    []

Test 17 sort empty list:
    >>> ml = __import__('1-my_list').MyList
    >>> extra_list.print_sorted()
    Traceback (most recent call last):
    ...
    NameError: name 'extra_list' is not defined
